/*Продолжите программу. Необходимо после каждого элемента со значением 5 массива digs вставлять новые элементы со значениями:
-1 - после первой найденной пятерки; -2 - после второй пятерки и т.д. Обратите внимание, что при вставке новых значений,
последние элементы массива digs могут теряться.
Также следует учитывать, что элемент со значением 5 может отсутствовать в массиве digs (тогда ничего вставлять не нужно).
Выведите в консоль по порядку значения всех прочитанных + добавленных элементов массива digs в одну строчку через пробел.*/

#include <stdio.h>

#define TOTAL     10

int main(void)
{
    int digs[TOTAL] = {0};
    size_t count = 0;
    size_t sz_ar = sizeof(digs) / sizeof(*digs);

    while(count < sz_ar && scanf("%d", &digs[count]) == 1)
        count++;

    // Переменная для отслеживания, сколько пятерок уже встретилось
    int fives_count = 0;

    // Проход по массиву, вставка новых значений после каждого элемента со значением 5
    for (size_t i = 0; i < count; ++i) {
        if (digs[i] == 5) {
            fives_count++;
            // Новое значение для вставки (начиная с -1 и увеличивая на 1)
            int new_value = -fives_count;
            // Сдвиг элементов массива для вставки нового значения
            for (size_t j = count; j > i + 1; --j) {
                digs[j] = digs[j - 1];
            }
            // Вставка нового значения
            digs[i + 1] = new_value;
            count++;

            // Проверка, если длина массива достигла максимального значения, удаляем последний элемент
            if (count == TOTAL + 1) {
                count--;
            }
        }
    }

    // Вывод массива
    for (size_t i = 0; i < count; ++i) {
        printf("%d ", digs[i]);
    }
    printf("\n");

    return 0;
}